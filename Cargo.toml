[package]
name = "image-kmeans"
version = "1.0.0"
authors = ["Colin McCulloch <colin@zyzle.dev>"]
edition = "2021"
description = "A WebAssembly module providing k-means clustering calculation for JS canvas images"
license = "MIT"
repository = "https://github.com/Zyzle/image-kmeans"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook", "wee_alloc"]

[dependencies]
wasm-bindgen = {version = "0.2.63", features = ["serde-serialize"]}

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }
serde = "1.0.145"
serde_derive = "1.0.145"
serde_json = "1.0.85"
js-sys = "0.3.60"
serde-wasm-bindgen = "0.4.5"
itertools = "0.10.5"
rand = "0.8.5"
getrandom = { version = "0.2", features = ["js"] }

[dependencies.web-sys]
version = "0.3.60"
features = ["console", "CanvasRenderingContext2d", "ImageData"]

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
lto = true
